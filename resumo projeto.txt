1. PROJETO

Equipe
Lilian, Leonardo, Rafaela, Lilian, Rogério e Osmario

Levantamento do trabalho:
- Engenharia de Software | Ciclo de Vida do Software (Documentação, Análise, Projeto, Implementação e Implantação).

Requisitos ou Tema do Projeto
- Uma Vídeo Locadora Imperial

Prazos e exigências
- Entrega por Email 
- Contendo informações do repositório
- Um release formal no repositório
- Data Final (Não definido)
- Proposta do projeto com seus artefatos
  *(Código fonte, imagens, arquivos de configuração, scripts, documentações de apoio, controle de versão, compartilhamento do GitHub, rastreabilidade do ciclo de vida, implantação no serviço PaaS (Ex: Heroku) ou IaaS (Ex: AWS,Google Cloud), entre outras coisas e relatório técnico final)
  *Relatório Final (Contextualização, escopo, tomadas de decisão, documentação da arquitetura da solução e etc)

2. LISTA DE ARTEFATOS AVALIATIVOS

2.1 Repositório do Projeto
- Documentação do projeto com todo seu ciclo de vida versionado e rastreado no GitHub
- Relatório Técnico contendo Apresentação do Projeto no GitHub

2.2 Criar página de readme/inicial com seguintes elementos:
- Nome do Projeto
- Justificativa do projeto
- Descrição do produto
- Especificação do papel de cada membro da equipe (Email e outras info relevante)

2.3 Processo de Desenvolvimento do Projeto
- Especificação e documentação explicita do processo de desenvolvimento utilizado
- Selecionar as melhores práticas e atividades dos modelos de processo (visto em aula)
  *Pode-se utilizar outros modelos não visto, desde que seja documentados.

2.4 Rastreabilidade do Ciclo de Vida
- Apartir do doc de requisitos disponível criar HU (Histórias do Usuário) com identificação, análise, priorização, e eventual evolução dos objetivos do time em relação so projeto
- HU deve ser cadastradas e gerenciadas como "issues" no issue tracker do GitHub, contendo seu ciclo de vida.
- HU deve conter "máquina de estados" indicando seu estado(To Do -> Doing -> Testing -> Done).

2.5 Post-mortem do projeto (Finalização)
- Resumo do projeto (Funcionamento, falhas, lições aprendidas e etc).
 * Deve conter Período da interação (Início e fim), 
 * Planejamento das atividades (Discriminando as atividades, o que foi feito e por quem)
 * Planejamento das atividades (Discriminando as atividades, o que não foi feito e por quem, quais impedimentos)
 * Interações Futuras (atividades e pra quem) e Lições aprendidas (Finalização)

2.6 Código da Aplicação
- Colocar no GitHub versionada 
- Pode utilizar qualquer linguagem ou framework
- Sugestão framework web ágeis (Ruby on Rails, Grails, Spring Boot, Django, entre outros)

2.7 Testes Funcionais
- Testes automatizados (TDD)
- Selecionar HUs que receberão testes

2.8 Testes de Aceitação
- Testes automatizados (BDD), sugestão Cucumber
- Selecionar HUs que receberão testes

2.9  Implantação
- Versão funcional e final implantada nas nuvens (serviços) 

3. Relatório Final do Projeto
- Seguir guidelines como material de apoio
- Deve possui Introdução, Gerência de Configuração e Ambiente, Caracteristicas da aplicação, visão de Análise e Projeto (Arquitetura), Visão de implantação, visão de uso, revisão do projeto e revisão individual).

4. Considerações de propriedade intelectual do projeto
- Caso o projeto tenha dimensões comerciais, verificar as políticas da UFPE.

-
